{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-tsx-content-file-path-blogs-testfile-mdx-158578bfc5a1617cf580.js","mappings":"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","sources":["webpack://jay-s-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://jay-s-blog/./blogs/testfile.mdx","webpack://jay-s-blog/./src/pages/{mdx.frontmatter__slug}.tsx","webpack://jay-s-blog/./src/components/layout.tsx","webpack://jay-s-blog/./src/hooks/use-site-metadata.tsx","webpack://jay-s-blog/./src/components/seo.tsx","webpack://jay-s-blog/./src/components/layout.module.css"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    hr: \"hr\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Test Header\"), \"\\n\", React.createElement(_components.p, null, \"hi. this is a \", React.createElement(_components.em, null, \"test\"), \" blog that i'm writing.\"), \"\\n\", React.createElement(_components.p, null, \"i'll probably use this page to \", React.createElement(_components.strong, null, \"TEST\"), \" mdx syntax.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"string x = 'Hello World!'; //code snippet\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://testgalore.github.io/\"\n  }, \"link to my portfolio\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/agtpm/Desktop/Development/gatsby/gatsbytut/blogs/testfile.mdx\";\nimport * as React from 'react';\nimport Layout from '../components/layout';\nimport {date} from '../components/layout.module.css';\nimport {SEO} from \"../components/seo\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"h4\", {\n    className: date\n  }, \"Posted: \", data.mdx.frontmatter.date), children);\n};\nconst query = \"3443347196\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(SEO, {\n    title: data.mdx.frontmatter.title,\n    description: data.mdx.frontmatter.summary\n  });\n};\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport './layout.css'\r\nimport {\r\n  container,\r\n  heading,\r\n} from './layout.module.css'\r\n\r\n\r\n//when is it a good idea to create a function component Prop?\r\nconst Layout = (props: any) => {\r\n  /*\r\n  const data = useStaticQuery(graphql`\r\n    query{\r\n      allFile {\r\n        nodes {\r\n          extension\r\n          dir\r\n          modifiedTime\r\n        }\r\n      }\r\n    }`\r\n  );\r\n  */\r\n  return (\r\n    <div className={container}>\r\n      {/*\r\n      <nav>\r\n        <ul className={navLinks}>\r\n          <li className={navLinkItem}>\r\n            <Link to=\"/blog\" className={navLinkText}>\r\n              Blog\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n  */}\r\n      <main>\r\n        <h1 className = {heading}>{props.pageTitle}</h1>\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","import React from \"react\"\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\r\n\r\nexport const SEO = ({ title, description, pathname, children }: any) => {\r\n  const { title: defaultTitle, description: defaultDescription, siteUrl} = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title + \" | \" + defaultTitle }</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"title\" content={seo.title} />\r\n      <meta name=\"url\" content={seo.url} />\r\n      {children}\r\n    </>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var date = \"layout-module--date--e6e02\";\nexport var heading = \"layout-module--heading--f158c\";"],"names":["MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","Object","assign","h1","p","em","strong","hr","pre","code","a","_provideComponents","React","href","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","className","date","Head","_ref2","SEO","description","summary","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","container","heading","pathname","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","name","content"],"sourceRoot":""}